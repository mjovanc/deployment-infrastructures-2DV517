---
  - name: MySQL master
    become: yes
    apt:
      name: [mysql-server, mysql-client, python3-pymysql]
      state: latest

  - name: Copy a MySQL master .conf file into place, backing up the original if it differs from the copied version
    become: yes
    copy:
      src: files/mysqld.cnf
      dest: /etc/mysql/mysql.conf.d/mysqld.cnf
      owner: root
      group: root
      mode: 0644
      backup: yes

  - name: Restarting MySQL
    become: yes
    service:
      name: mysql
      state: restarted
      enabled: yes

  - name: Create MySQL user for master
    become: true
    shell: |
      mysql -u root -e "CREATE USER '{{ mysql_replication_user }}'@'{{ hostvars['mysqlslave']['ansible_host'] }}' IDENTIFIED BY '{{ mysql_replication_user_password }}';"
      mysql -u root -e "ALTER USER '{{ mysql_replication_user }}'@'{{ hostvars['mysqlslave']['ansible_host'] }}' IDENTIFIED WITH mysql_native_password BY '{{ mysql_replication_user_password }}';"
      mysql -u root -e "GRANT REPLICATION SLAVE ON *.* TO '{{ mysql_replication_user }}'@'{{ hostvars['mysqlslave']['ansible_host'] }}';"
    
  - name: Get MySQL master filename
    shell: mysql -e "SHOW MASTER STATUS" -s | tail -n 1 | awk {'print $1'}
    register: filename
    become: true

  - name: Get MySQL master position
    shell: mysql -e "SHOW MASTER STATUS" -s | tail -n 1 | awk {'print $2'}
    register: position
    become: true

  - name: Register MySQL variables
    add_host:
      name: mysql_master_fileposition
      ansible_mysql_filename: "{{ filename.stdout }}"
      ansible_mysql_position: "{{ position.stdout }}"

